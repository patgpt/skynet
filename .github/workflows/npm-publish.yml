name: Publish to npm

on:
  push:
    branches:
      - main

permissions:
  contents: read
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check npm for existing version
        id: version_check
        run: |
          set -eo pipefail
          PACKAGE_NAME=$(jq -r .name package.json)
          PACKAGE_VERSION=$(jq -r .version package.json)
          echo "package_name=$PACKAGE_NAME" >> $GITHUB_OUTPUT
          echo "package_version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
          if npm view "$PACKAGE_NAME@$PACKAGE_VERSION" version >/dev/null 2>&1; then
              echo "published=true" >> $GITHUB_OUTPUT
              echo "Version $PACKAGE_VERSION already published for $PACKAGE_NAME. Skipping publish." >> $GITHUB_STEP_SUMMARY
              exit 0
          else
              echo "published=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
        if: steps.version_check.outputs.published == 'false'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
        if: steps.version_check.outputs.published == 'false'

      - name: Install dependencies
        run: bun install
        if: steps.version_check.outputs.published == 'false'

      - name: Run tests
        run: bun test
        if: steps.version_check.outputs.published == 'false'

      - name: Build
        run: bun run build
        if: steps.version_check.outputs.published == 'false'

      - name: Generate TypeScript declarations
        run: bunx tsc --emitDeclarationOnly --declaration --declarationMap --outDir dist
        if: steps.version_check.outputs.published == 'false'

      - name: Verify package contents
        run: npm pack --dry-run
        if: steps.version_check.outputs.published == 'false'

      - name: Publish to npm
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        if: steps.version_check.outputs.published == 'false'

      - name: Create summary
        run: |
          echo "### ðŸ“¦ Published Successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Package: \`$(jq -r .name package.json)\`" >> $GITHUB_STEP_SUMMARY
          echo "Version: \`$(jq -r .version package.json)\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### Install from npm" >> $GITHUB_STEP_SUMMARY
          echo "```bash" >> $GITHUB_STEP_SUMMARY
          echo "npx $(jq -r .name package.json)" >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ“¦ npm: https://www.npmjs.com/package/$(jq -r .name package.json)" >> $GITHUB_STEP_SUMMARY
